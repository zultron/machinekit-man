GANTRY_LATCHING
===============

. <<name,NAME>>
. <<synopsis,SYNOPSIS>>
. <<description,DESCRIPTION>>
. <<functions,FUNCTIONS>>
. <<pins,PINS>>
. <<license,LICENSE>>




===== [[name]]NAME

gantry_latching -- LinuxCNC HAL component for driving multiple joints from a single axis


===== [[synopsis]]SYNOPSIS
loadrt gantry_latching [count=__N__**|names=**__name1__**[,**__name2...__**]] [personality=**__P,P,...__**]
**

===== [[description]]DESCRIPTION


Drives multiple physical motors (joints) from a single axis input
.LP
The `personality' value is the number of joints to control.  Two is typical, but
up to seven is supported (a three joint setup has been tested with hardware).
.LP
All controlled joints track the commanded position (with a per-joint offset)
unless in the process of latching.  Latching is when the commanded position is
moving away the from the homing switches (as determined by the sign of search-vel),
the joint home switches are not all in the same state and homing is active.  When the system is
latching and a joint home switch deactivates, the command value sent to that joint
is "frozen" and the joint offset value is updated instead.  Once all home
switches are deactivated, there are no more adjustments made to the offset values
and all joints run in lock-step once more.
.LP
For best results, set HOME_SEARCH_VEL and HOME_LATCH_VEL to the opposite direction
and as slow as practical.  When a joint home switch trips, the commanded
velocity will drop immediately from HOME_SEARCH_VEL to zero, with no limit on
accleration.
.LP
The latching gantry component is the opposite of the normal gantry component. It
makes sense to use it with home switches that have a reproduceable deactivation hysteresis.
.LP
Using the per joint home-offset input it is possible add a small offset when latching.
This makes it possible to adjust small differences in the endstop positions of the gantry setup.
.LP
The homing input must be connected to the axis homing output motion in order to enable
the gantry component. When the axis is not homing latching will not be activated.



===== [[functions]]FUNCTIONS

**gantry-latching.**__N__**.read** (requires a floating-point thread)
Update position-fb and home/limit outputs based on joint values

**gantry-latching.**__N__**.write** (requires a floating-point thread)
Update joint pos-cmd outputs based on position-cmd in


===== [[pins]]PINS

gantry-latching.__N__**.joint.**__MM__**.pos-cmd** float out  (MM=00..personality) 
Per-joint commanded position

gantry-latching.__N__**.joint.**__MM__**.pos-fb** float in  (MM=00..personality) 
Per-joint position feedback

gantry-latching.__N__**.joint.**__MM__**.home** bit in  (MM=00..personality) 
Per-joint home switch

gantry-latching.__N__**.joint.**__MM__**.home-offset** float in  (MM=00..personality) 
Per-joint home offset for fine tuning

gantry-latching.__N__**.joint.**__MM__**.offset** float out  (MM=00..personality) 
(debugging) Per-joint offset value, updated when homing

gantry-latching.__N__**.position-cmd** float in 
Commanded position from motion

gantry-latching.__N__**.position-fb** float out 
Position feedback to motion

gantry-latching.__N__**.homing** bit in 
Axis homing state from motion

gantry-latching.__N__**.home** bit out 
Combined home signal, true if all joint home inputs are true

gantry-latching.__N__**.limit** bit out 
Combined limit signal, true if any joint home input is true

gantry-latching.__N__**.search-vel** float in 
HOME_SEARCH_VEL from ini file


===== [[license]]LICENSE

GPL
