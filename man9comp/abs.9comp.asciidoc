ABS
===

. <<name,NAME>>
. <<synopsis,SYNOPSIS>>
. <<functions,FUNCTIONS>>
. <<pins,PINS>>
. <<license,LICENSE>>




===== [[name]]NAME

abs -- Compute the absolute value and sign of the input signal


===== [[synopsis]]SYNOPSIS
loadrt abs [count=__N__**|names=**__name1__**[,**__name2...__**]]
**

===== [[functions]]FUNCTIONS

**abs.**__N__ (requires a floating-point thread)



===== [[pins]]PINS

abs.__N__**.in** float in 
Analog input value

abs.__N__**.out** float out 
Analog output value, always positive

abs.__N__**.sign** bit out 
Sign of input, false for positive, true for negative

abs.__N__**.is-positive** bit out 
TRUE if input is positive, FALSE if input is 0 or negative

abs.__N__**.is-negative** bit out 
TRUE if input is negative, FALSE if input is 0 or positive


===== [[license]]LICENSE

GPL
