CONV_S32_FLOAT
==============

. <<name,NAME>>
. <<synopsis,SYNOPSIS>>
. <<functions,FUNCTIONS>>
. <<pins,PINS>>
. <<license,LICENSE>>




===== [[name]]NAME

conv_s32_float -- Convert a value from s32 to float


===== [[synopsis]]SYNOPSIS
loadrt conv_s32_float [count=__N__**|names=**__name1__**[,**__name2...__**]]
**

===== [[functions]]FUNCTIONS

**conv-s32-float.**__N__ (requires a floating-point thread)
Update 'out' based on 'in'


===== [[pins]]PINS

conv-s32-float.__N__**.in** s32 in 
conv-s32-float.__N__**.out** float out 


===== [[license]]LICENSE

GPL
