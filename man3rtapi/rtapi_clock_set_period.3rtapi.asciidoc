rtapi_clock_set_period
======================

. <<name,NAME>>
. <<syntax,SYNTAX>>
. <<arguments,ARGUMENTS>>
. <<description,DESCRIPTION>>
. <<realtime considerations,REALTIME CONSIDERATIONS>>
. <<return value,RETURN VALUE>>


===== [[name]]NAME

rtapi_clock_set_period -- set the basic time interval for realtime tasks



===== [[syntax]]SYNTAX
 rtapi_clock_set_period(long int __nsec__)



===== [[arguments]]ARGUMENTS
.IP __nsec__**
**The desired basic time interval for realtime tasks.



===== [[description]]DESCRIPTION
**rtapi_clock_set_period** sets the basic time interval for realtime tasks.
All periodic tasks will run at an integer multiple of this period.  The first
call to **rtapi_clock_set_period** with __nsec__ greater than zero will
start the clock, using __nsec__ as the clock period in nano-seconds.  Due to
hardware and RTOS limitations, the actual period may not be exactly what was
requested.  On success, the function will return the actual clock period if it
is available, otherwise it returns the requested period.  If the requested
period is outside the limits imposed by the hardware or RTOS, it returns
**-EINVAL** and does not start the clock.  Once the clock is started,
subsequent calls with non-zero __nsec__ return **-EINVAL** and have no
effect.  Calling **rtapi_clock_set_period** with __nsec__ set to zero
queries the clock, returning the current clock period, or zero if the clock has
not yet been started.  



===== [[realtime considerations]]REALTIME CONSIDERATIONS
Call only from within init/cleanup code, not from realtime tasks.  This
function is not available from user (non-realtime) code.



===== [[return value]]RETURN VALUE
The actual period provided by the RTOS, which may be different than the
requested period, or a RTAPI status code.
